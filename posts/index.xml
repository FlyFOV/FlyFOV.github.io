<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Haotian Fan</title>
    <link>https://flyfov.github.io/posts/</link>
    <description>Recent content in Posts on Haotian Fan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 15 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://flyfov.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C缺陷与陷阱</title>
      <link>https://flyfov.github.io/posts/c-traps/</link>
      <pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://flyfov.github.io/posts/c-traps/</guid>
      <description>词法分析中的贪心法： 从左到右一个字符一个字符的读入，如果该字符可能组成一个符号，那么再读入下一个字符，判断已读入的两个字符组成的字符串是否可能是一个符号的组成部分。如果可能，继续读入下一个字符，重述上述判断。
整型常量 如果一个整型常量的第一个字符是数字0，那么该常量将被视作八进制数。
字符与字符串 用单引号引起的一个字符代表一个整数（ASCII），而用双引号引起的字符代表一个指向无名数组起始字符的指针。
理解函数的声明 (fp)()为调用该函数的方式，ANSI C允许程序员将该式简写为fp()
((void)(*)())0)() 编写一个独立运行于某种微处理器伤的C程序。当计算机启动时，硬件将调用首地址为0的子例程
注意作为语句结束标志的分号 如果一个函数返回值为void，此时编译器会隐含的将函数返回值类型视作int类型</description>
    </item>
    
    <item>
      <title>随笔</title>
      <link>https://flyfov.github.io/posts/suibi_612/</link>
      <pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://flyfov.github.io/posts/suibi_612/</guid>
      <description>六月十二日，天气微凉。 Hammersmith，位于伦敦西部的城区，与伦敦市中心完全是两种风格。
这里更安静，少了一份浮躁，一份逼仄。之前生活在市中心，每天看着来来往往，匆匆忙忙的芸芸众生，心境也变得浮躁起来。
年轻人本该浮躁。
那些聪明绝顶，抑或年轻时顿悟世间真理的人，大彻大悟的人，或许会很悲哀吧。
人的心情很奇妙，从“念天地之悠悠，独怆然而涕下”，到“寄浮游于天地，渺沧海之一粟”的转变，有时只需要一刹，有时却需要一辈子。</description>
    </item>
    
    <item>
      <title>Twemoji Support 🤩</title>
      <link>https://flyfov.github.io/posts/twemoji-support/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://flyfov.github.io/posts/twemoji-support/</guid>
      <description>If you want to use Twitter&amp;rsquo;s Twemoji across your website, enable it in your config.toml
[params] enableTwemoji = true This will not only give your website unified emojis across all platforms. It will also give you the latest Unicode 13 emoji set, such as 🧋🫕🛻🪗🪞.
Emoji size changes with text size 🤩 Emoji size changes with text size 🤩 Emoji size changes with text size 🤩 Emoji size changes with text size 🤩 Emoji size changes with text size 🤩 Emoji size changes with text size 🤩  </description>
    </item>
    
    <item>
      <title>Render LaTeX using KaTeX</title>
      <link>https://flyfov.github.io/posts/render-latex-using-katex/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://flyfov.github.io/posts/render-latex-using-katex/</guid>
      <description>Enable katex by adding katex = &amp;quot;true&amp;quot; to the front matter
+++ katex = &amp;#34;true&amp;#34; +++ If you want to enable KaTeX or MathJax for all post, add katex = ture or math = true in config.toml in [params] section.
It&amp;rsquo;s almost a dropin alternative to the mathjax solution,you should just choose one of them.
Inline math looks like this
This is text with inline math $\sum_{n=1}^{\infty} 2^{-n} =1$ This is text with inline math $\sum_{n=1}^{\infty} 2^{-n} = 1$</description>
    </item>
    
    <item>
      <title>Hugo coder wiki</title>
      <link>https://flyfov.github.io/posts/hugo-coder-wiki/</link>
      <pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://flyfov.github.io/posts/hugo-coder-wiki/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Theme Demo</title>
      <link>https://flyfov.github.io/posts/theme-demo/</link>
      <pubDate>Sun, 08 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://flyfov.github.io/posts/theme-demo/</guid>
      <description>Style Demo h1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading  This is bold text
This is bold text
This is italic text
This is italic text
Deleted text
This is text with inline math $\sum_{n=1}^{\infty} 2^{-n} = 1$ and with math blocks:
$$ \sum_{n=1}^{\infty} 2^{-n} = 1 $$
   Heading Another heading     text text   text text   text text     Block quotes are written like so.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://flyfov.github.io/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://flyfov.github.io/posts/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://flyfov.github.io/posts/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://flyfov.github.io/posts/hugo-template-primer/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://flyfov.github.io/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://flyfov.github.io/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://flyfov.github.io/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://flyfov.github.io/posts/migrate-from-jekyll/</guid>
      <description>Table of Contents  Move static content to static Create your Hugo configuration file Set your configuration publish folder to site Convert Jekyll templates to Hugo templates Convert Jekyll plugins to Hugo shortcodes  Implementation Usage   Finishing Touches  Fix Content Clean Up   A practical example in a diff  Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output.</description>
    </item>
    
  </channel>
</rss>